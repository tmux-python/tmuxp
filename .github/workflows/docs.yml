name: docs

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.13']
    steps:
      - uses: actions/checkout@v4
      - name: Filter changed file paths to outputs
        uses: dorny/paths-filter@v3.0.2
        id: changes
        with:
          filters: |
            root_docs:
              - CHANGES
              - README.*
            docs:
              - 'docs/**'
              - 'examples/**'
            python_files:
              - 'src/tmuxp/**'
              - pyproject.toml
              - uv.lock

      - name: Should publish
        if: steps.changes.outputs.docs == 'true' || steps.changes.outputs.root_docs == 'true' || steps.changes.outputs.python_files == 'true'
        run: echo "PUBLISH=$(echo true)" >> $GITHUB_ENV

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        if: env.PUBLISH == 'true'
        with:
          enable-cache: true

      - name: Set up Python ${{ matrix.python-version }}
        if: env.PUBLISH == 'true'
        run: uv python install ${{ matrix.python-version }}

      - name: Install dependencies
        if: env.PUBLISH == 'true'
        run: uv sync --all-extras --dev

      - name: Print python versions
        if: env.PUBLISH == 'true'
        run: |
          python -V
          uv run python -V

      - name: Build documentation
        if: env.PUBLISH == 'true'
        run: |
          pushd docs; make SPHINXBUILD='uv run sphinx-build' html; popd

      - name: Push documentation to S3
        if: env.PUBLISH == 'true'
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'us-west-1' # optional: defaults to us-east-1
          SOURCE_DIR: 'docs/_build/html' # optional: defaults to entire repository

      - name: Purge cache on Cloudflare
        if: env.PUBLISH == 'true'
        uses: jakejarvis/cloudflare-purge-action@v0.3.0
        env:
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}
