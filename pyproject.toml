[tool.poetry]
name = "tmuxp"
version = "1.47.0"
description = "Session manager for tmux, which allows users to save and load tmux sessions through simple configuration files."
license = "MIT"
authors = ["Tony Narlock <tony@git-pull.com>"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "License :: OSI Approved :: MIT License",
  "Operating System :: POSIX",
  "Operating System :: MacOS :: MacOS X",
  "Environment :: Web Environment",
  "Intended Audience :: Developers",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: Utilities",
  "Topic :: System :: Shells",
]
keywords = ["tmux", "session manager", "terminal", "ncurses"]
homepage = "http://github.com/tmux-python/tmuxp/"
readme = "README.md"
packages = [
  { include = "*", from = "src" },
]
include = [
  { path = "CHANGES", format = "sdist" },
  { path = ".tmuxp.yaml", format = "sdist" },
  { path = "tests", format = "sdist" },
  { path = "examples", format = "sdist" },
  { path = "docs", format = "sdist" },
  { path = "conftest.py", format = "sdist" },
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/tmux-python/tmuxp/issues"
Documentation = "https://tmuxp.git-pull.com"
Repository = "https://github.com/tmux-python/tmuxp"
Changes = "https://github.com/tmux-python/tmuxp/blob/master/CHANGES"

[tool.poetry.scripts]
tmuxp = 'tmuxp:cli.cli'

[tool.poetry.dependencies]
python = "^3.8"
libtmux = "~0.37.0"
colorama = ">=0.3.9"
PyYAML = "^6.0"

[tool.poetry.group.docs.dependencies]
### Docs ###
sphinx = "*"
aafigure = ">=0.6"
pillow = "*"
furo = "*"
gp-libs = "*"
sphinx-autobuild = "*"
sphinx-autodoc-typehints = "*"
sphinx-argparse = "*"
sphinx-inline-tabs = "*"
sphinxext-opengraph = "<0.8" # https://github.com/wpilibsuite/sphinxext-opengraph/issues/100
sphinx-copybutton = "*"
sphinxext-rediraffe = "*"
myst_parser = ">=0.18.1"
docutils = "*"
linkify-it-py = "*"

[tool.poetry.group.test.dependencies]
### Testing ###
pytest = "*"
pytest-rerunfailures = "*"
pytest-mock = "*"
pytest-cov = "*"
pytest-watcher = "*"
pytest-xdist = "*"
gp-libs = "~0.0.4"

[tool.poetry.group.coverage.dependencies]
### Coverage ###
codecov = "*"
coverage = "*"

[tool.poetry.group.lint.dependencies]
### Lint ###
ruff = "*"
mypy = "*"
types-colorama = "*"
types-docutils = "*"
types-PyYAML = "*"

[tool.coverage.run]
branch = true
source = [
  "tmuxp",
]
omit = [
  "tests/*",
  "*/_vendor/*",
  "*/_*",
  "pkg/*",
  "*/log.py",
]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
  "def parse_args",
]

[tool.mypy]
strict = true
files = [
  "src/",
  "tests/",
]
enable_incomplete_feature = []

[[tool.mypy.overrides]]
module = [
  "shtab",
  "aafigure",
  "IPython.*",
  "ptpython.*",
  "prompt_toolkit.*",
  "bpython",
]
ignore_missing_imports = true

[tool.ruff]
target-version = "py38"

[tool.ruff.lint]
select = [
  "E", # pycodestyle
  "F", # pyflakes
  "I", # isort
  "UP", # pyupgrade
  "A", # flake8-builtins
  "B", # flake8-bugbear
  "C4", # flake8-comprehensions
  "COM", # flake8-commas
  "EM", # flake8-errmsg
  "Q", # flake8-quotes
  "PTH", # flake8-use-pathlib
  "SIM", # flake8-simplify
  "TRY", # Trycertatops
  "PERF", # Perflint
  "RUF", # Ruff-specific rules
  "D", # pydocstyle
]
ignore = [
  "COM812", # missing trailing comma, ruff format conflict
]

[tool.ruff.lint.isort]
known-first-party = [
  "tmuxp",
]
combine-as-imports = true

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"*/__init__.py" = ["F401"]
"src/tmuxp/workspace/finders.py" = ["PTH"]
"src/tmuxp/cli/*.py" = ["PTH"]
"docs/_ext/aafig.py" = ["PTH"]

[tool.pytest.ini_options]
addopts = "--reruns=0 --tb=short --no-header --showlocals --doctest-modules"
doctest_optionflags = "ELLIPSIS NORMALIZE_WHITESPACE"
testpaths = [
  "src/tmuxp",
  "tests",
  "docs",
]
filterwarnings = [
  "ignore:The frontend.Option(Parser)? class.*:DeprecationWarning::",
]

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
